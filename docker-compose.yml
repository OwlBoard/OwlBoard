services:
  mysql_db:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  user_service:
    build: ./User_Service
    container_name: user_service
    restart: always
    depends_on:
      - mysql_db
    ports:
      - "5000:8000"  # accedes con localhost:5000
    environment:
      DATABASE_URL: "mysql+pymysql://user:password@mysql_db/user_db"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/%2F"

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" 
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  mongo_db:
    image: mongo:6
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27018:27017" # Puerto 27018
    volumes:
      - mongo_data:/data/db

  redis_db:
    image: redis:7-alpine
    container_name: redis_db
    restart: always
    command: redis-server --requirepass password
    ports:
      - "6379:6379" # Puerto Redis
    volumes:
      - redis_data:/data

  comments_service:
    build: ./Comments_Service
    container_name: comments_service
    restart: always
    depends_on:
      - mongo_db
    ports:
      - "8001:8000"  # Accedes con localhost:8001 (changed to avoid port conflict)
    environment:
      DATABASE_URL: "mongodb://user:password@mongo_db:27017/comments_db?authSource=admin"

  chat_service:
    build: ./Chat_Service
    container_name: chat_service
    restart: always
    depends_on:
      - redis_db
    ports:
      - "8002:8000"  # Chat service accessible on localhost:8002
    environment:
      REDIS_URL: "redis://:password@redis_db:6379/0"
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:3001"]'

  frontend:
    build: 
      context: ./Desktop_Front_End
      target: development
    container_name: Frontend
    restart: always
    depends_on:
      - user_service
      - comments_service
      - canvas_service
      - chat_service
    ports:
      - "3000:3000"  # Frontend accessible on localhost:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USER_SERVICE_URL=http://localhost:5000
      - REACT_APP_COMMENTS_SERVICE_URL=http://localhost:8001
      - REACT_APP_CHAT_SERVICE_URL=http://localhost:8002
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    volumes:
      - ./Desktop_Front_End:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  mobile_frontend:
    build:
      context: ./Mobile_Front_End
      dockerfile: Dockerfile
    container_name: mobile_frontend
    restart: always
    depends_on:
      - user_service
      - comments_service
    ports:
      - "3001:80"  # Mobile frontend accessible on localhost:3001 (avoiding port 3000 conflict)
    environment:
      - USER_SERVICE_URL=http://user_service:8000
      - COMMENTS_SERVICE_URL=http://comments_service:8000
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres_db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: canvas_db
    ports:
      - "5432:5432"
    volumes:
      - ./Canvas_Service/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
  
  canvas_service:
    build: ./Canvas_Service
    container_name: canvas_service
    restart: always
    depends_on:
      - postgres_db
      - rabbitmq
    ports:
      - "8002:8080" 
    environment:
      DATABASE_URL: "postgres://admin:admin@postgres_db:5432/canvas_db?sslmode=disable"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"

volumes:
  mongo_data:
  mysql_data:
  postgres_data:
  redis_data:
